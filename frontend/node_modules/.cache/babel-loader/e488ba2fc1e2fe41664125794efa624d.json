{"ast":null,"code":"var _jsxFileName = \"/Users/miladhaghighi/WebApps/ArbitrageAirbenders/frontend/src/components/Frame2.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nconst Frame2 = () => {\n  // Initialize bankroll as a string to allow empty input\n  const [bankroll, setBankroll] = useState(\"1000\");\n\n  // Validate that the input is empty or contains only digits\n  const handleChange = e => {\n    const value = e.target.value;\n    if (value === \"\" || /^[0-9]*$/.test(value)) {\n      setBankroll(value);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"frame2\",\n    style: {\n      marginTop: \"-60px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rectangle4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    className: \"buttonNext\",\n    to: \"/frame3\",\n    state: {\n      bankroll: Number(bankroll)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Next\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rectangle3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rectangle5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bankrollQuestion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"What is your bankroll?\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputBankroll\",\n    type: \"number\",\n    value: bankroll,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dollarsign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"$\"));\n};\nexport default Frame2;","map":{"version":3,"names":["React","useState","Link","Frame2","bankroll","setBankroll","handleChange","e","value","target","test","createElement","className","style","marginTop","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to","state","Number","type","onChange"],"sources":["/Users/miladhaghighi/WebApps/ArbitrageAirbenders/frontend/src/components/Frame2.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Frame2 = () => {\n  // Initialize bankroll as a string to allow empty input\n  const [bankroll, setBankroll] = useState(\"1000\");\n\n  // Validate that the input is empty or contains only digits\n  const handleChange = (e) => {\n    const value = e.target.value;\n    if (value === \"\" || /^[0-9]*$/.test(value)) {\n      setBankroll(value);\n    }\n  };\n\n  return (\n    <div className=\"frame2\" style={{ marginTop: \"-60px\" }}>\n      <div className=\"rectangle4\"></div>\n      {/* Convert bankroll to a number when passing to Frame3 */}\n      <Link className=\"buttonNext\" to=\"/frame3\" state={{ bankroll: Number(bankroll) }}>\n        Next\n      </Link>\n      <div className=\"rectangle3\"></div>\n      <div className=\"rectangle5\"></div>\n      <div className=\"bankrollQuestion\">What is your bankroll?</div>\n      <input\n        className=\"inputBankroll\"\n        type=\"number\"\n        value={bankroll}\n        onChange={handleChange}\n      />\n      <div className=\"dollarsign\">$</div>\n    </div>\n  );\n};\n\nexport default Frame2;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACnB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,MAAM,CAAC;;EAEhD;EACA,MAAMK,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5B,IAAIA,KAAK,KAAK,EAAE,IAAI,UAAU,CAACE,IAAI,CAACF,KAAK,CAAC,EAAE;MAC1CH,WAAW,CAACG,KAAK,CAAC;IACpB;EACF,CAAC;EAED,oBACER,KAAA,CAAAW,aAAA;IAAKC,SAAS,EAAC,QAAQ;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpDpB,KAAA,CAAAW,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAM,CAAC,eAElCpB,KAAA,CAAAW,aAAA,CAACT,IAAI;IAACU,SAAS,EAAC,YAAY;IAACS,EAAE,EAAC,SAAS;IAACC,KAAK,EAAE;MAAElB,QAAQ,EAAEmB,MAAM,CAACnB,QAAQ;IAAE,CAAE;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAE3E,CAAC,eACPpB,KAAA,CAAAW,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAM,CAAC,eAClCpB,KAAA,CAAAW,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAM,CAAC,eAClCpB,KAAA,CAAAW,aAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,wBAA2B,CAAC,eAC9DpB,KAAA,CAAAW,aAAA;IACEC,SAAS,EAAC,eAAe;IACzBY,IAAI,EAAC,QAAQ;IACbhB,KAAK,EAAEJ,QAAS;IAChBqB,QAAQ,EAAEnB,YAAa;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACxB,CAAC,eACFpB,KAAA,CAAAW,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,GAAM,CAC/B,CAAC;AAEV,CAAC;AAED,eAAejB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}